#!/usr/bin/python

import sys, os
import optparse

def usage():
    from textwrap import dedent
    print dedent(
        '''\
           usage: %s [options]

           options:
               --no-reload-module     
               --install              
               --no-kvm               
               --help                 this help
         ''') % (sys.argv[0],)

optparser = optparse.OptionParser()

optparser.add_option('--no-reload-module',
                     help = 'do not reload kvm module',
                     action = 'store_false',
                     dest = 'reload',
                     default = True,
                     )

optparser.add_option('--install',
                     help = 'start up guest in installer boot cd',
                     action = 'store_true',
                     default = False,
                     )

optparser.add_option('--no-kvm',
                     help = 'use standard qemu, without kvm',
                     action = 'store_false',
                     dest = 'kvm',
                     default = True,
                     )
(options, args) = optparser.parse_args(sys.argv)

if options.kvm and options.reload:
    for x in os.popen4('/sbin/lsmod')[1].readlines():
        if x.startswith('kvm '):
            if os.spawnl(os.P_WAIT, '/sbin/rmmod', 'rmmod', 'kvm') != 0:
                raise Exception('failed to remove kvm module')
    if os.spawnl(os.P_WAIT, '/sbin/insmod', 'insmod', '../kernel/kvm.ko') != 0:
        raise Exception('failed to load kvm module')

disk = "/tmp/disk"
if options.install:
    fd = file(disk, 'w')
    fd.truncate()
    fd.seek(10*1024*1024*1024-1)
    fd.write('\0')
    fd.close()

bootdisk = 'c'
if options.install:
    bootdisk = 'd'

cdrom = '/data/mirror/fedora/core/5/x86_64/os/images/boot.iso'

cmd = 'qemu-system-x86_64'
if options.kvm:
    cmd = './x86_64-softmmu/' + cmd

os.execlp(cmd, cmd,
          '-cdrom', cdrom, '-boot', bootdisk, '-L', '/usr/share/qemu',
          '-hda', disk, '-m', '384', '-serial', 'file:/tmp/serial.log',
          )
