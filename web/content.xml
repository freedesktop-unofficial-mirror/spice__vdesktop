<?xml version="1.0" encoding="ISO-8859-1"?>
<cms:pageset 
  xmlns:cms="http://www.qumranet.com/silly-cms"
  xmlns="http://www.w3.org/1999/xhtml" 
  xmlns:xhtml="http://www.w3.org/1999/xhtml" 
>
  <cms:page name="index">
     <cms:menuitem>About</cms:menuitem>
     <cms:title>KVM: Kernel-based Virtual Machine for Linux</cms:title>
     <cms:content>

        <p>
           <b>KVM</b> (for Kernel-based Virtual Machine) is a full
           virtualization solution for Linux on x86 hardware.  It consists
           of a loadable kernel module (<code>kvm.ko</code>) and a userspace
           component.
        </p>

        <p>
           Using KVM, one can run multiple virtual machines running
           unmodified Linux or Windows images.  Each virtual machine has
           private virtualized hardware: a network card, disk, graphics
           adapter, etc.
        </p>

        <p>
           The kernel component of KVM is proposed for inclusion into
           mainline Linux.
        </p>

        <p>
           KVM is open source software.
        </p>

     </cms:content>
  </cms:page>

  <cms:page name="status">
     <cms:menuitem>Status</cms:menuitem>
     <cms:title>Status</cms:title>
     <cms:content>

       <p>
          Currently, KVM is very stable (at least with the guests we test :),
          and is fast enough for desktop use on recent processors.  For
          server workloads, an optimized version of the MMU virtualization is
          needed.  This is currently in progress.
       </p>

       <p>
          KVM is available as a patch to recent Linux kernel versions and
          as an external module that can be used with your favorite distro-
          provided kernel.  We are working to merge KVM into Linux so that
          the functionality is available with no hassle.
       </p>

       <p>
          Working:
          <ul>
             <li>Intel-based hosts (requires VT capable processors)</li>
             <li>Linux guests (32-bit and 64-bit)</li>
             <li>Windows guests (32-bit)</li>
             <li>SMP hosts</li>
         </ul>
       </p>

       <p>
          In progress:
          <ul>
             <li>AMD-based hosts (require AMD-V capable processors)</li>
             <li>Optimized MMU virtualization</li>
          </ul>
       </p>

       <p>
          Planned:
          <ul>
             <li>SMP guests</li>
          </ul>
       </p>

     </cms:content>
  </cms:page>

  <cms:page name="howto">
     <cms:menuitem>HOWTO</cms:menuitem>
     <cms:title>Getting KVM to run on your machine</cms:title>

     <cms:content>

       <p>
          You will need (see download section):
          <ul>
             <li><code>kvm-module.tar.gz</code></li>
             <li><code>libkvm.tar.gz</code></li>
             <li><code>qemu-0.8.2</code> from the
                 <a href="http://www.qemu.com">qemu</a> web site</li>
             <li><code>qemu-kvm.patch</code></li>
             <li>A VT capable Intel processor</li>
             <li>qemu prerequisites:
                <ul>
                   <li><code>gcc</code> 3.x</li>
                   <li><code>SDL</code> libraries and headers</li>
                   <li><code>zlib</code> libraries and headers</li>
                </ul>
             </li>
             <li>A recent enough binutils (&gt;= 2.16.91.0.2) for vmx 
                 instruction support</li>
          </ul>
       </p>

       <p>
          Steps:
          <ol>
             <li>
                Compile and load <code>kvm.ko</code>.  This assumes you are
                using the external module:
                <pre>
tar xzf kvm-module.tar.gz
cd kvm-module
make
sudo /sbin/insmod kvm.ko
cd ..
</pre>
                (if you're running a kernel with kvm patched in, just
                 <code>modprobe kvm</code> instead)
             </li>                

             <li>Compile and install libkvm:
                <pre>
tar xzf libkvm.tar.gz
cd libkvm
make KERNELDIR=../kvm-module
sudo make KERNELDIR=../kvm-module install DESTDIR=/usr/local/kvm
cd ..
</pre>
                (if you're running a kernel with kvm patched in, substitute
                 the kernel source directory for <code>KERNELDIR</code>)
             </li>

             <li>
                Patch, configure, compile, and install qemu:
                <pre>
tar xzf qemu-0.8.2.tar.gz
cd qemu-0.8.2
patch -p0 &lt; ../qemu-kvm.patch
./configure --cc=gcc32 --enable-kvm --disable-kqemu --prefix=/usr/local/kvm \
      --extra-cflags='-I /usr/local/kvm/include' \
      --extra-ldflags='-L /usr/local/kvm/lib64'
make
sudo make install
cd ..
</pre>
             </li>

             <li>
                Create a disk image:
                <pre>
/usr/local/kvm/bin/qemu-img create -f qcow vdisk.img 10G
</pre>
             </li>

             <li>
                Install an operating system:
                <pre>
sudo /usr/local/kvm/bin/qemu-system-x86_64 \
 -hda vdisk.img \
 -cdrom /path/to/boot-media.iso \
 -boot d \
 -m 384
</pre>
             </li>

             <li>
                After installation is complete, run it with:
                <pre>
sudo /usr/local/kvm/bin/qemu-system-x86_64 \
 -hda vdisk.img \
 -boot c \
 -m 384
</pre>
             </li>

       
          </ol>
       </p>

     </cms:content>
  </cms:page>

  <cms:page name="lists">
     <cms:menuitem>Lists</cms:menuitem>
     <cms:title>Mailing Lists</cms:title>
     <cms:content>

       <p>
          kvm has a sourceforge.net mailing list, 
          <code>kvm-devel@lists.sourceforge.net</code>.
       </p>

       <p>
          To subscribe, click <a href=
          "http://lists.sourceforge.net/mailman/listinfo/kvm-devel">here</a>.
       </p>

       <p>
         Archives:
         <ul>
           <li><a href="http://sourceforge.net/mailarchive/forum.php?forum_id=50582">Sourceforge</a></li>
           <li><a href="http://news.gmane.org/gmane.comp.emulators.kvm.devel">
              Gmane</a></li>
         </ul>
       </p>

     </cms:content>
  </cms:page>

  <cms:page name="Documents">
     <cms:menuitem>Documents</cms:menuitem>
     <cms:title>Documents</cms:title>
     <cms:content>
       <p>
         Documents:
         <ul>
           <li><a href="http://www.qumranet.com/wp/kvm_wp.pdf">kvm whitepaper</a></li>
          </ul>
       </p>

     </cms:content>
  </cms:page>

  
  <cms:page href="http://sourceforge.net/project/showfiles.php?group_id=180599">
     <cms:menuitem>Download</cms:menuitem>
  </cms:page>

  <cms:page name="faq">
     <cms:menuitem>FAQ</cms:menuitem>
     <cms:title>Frequently Asked Questions</cms:title>
     <cms:content>
        
       <p class="q">
          What do I need to use kvm?
       </p>

       <p>
          You will need an x86 machine running a recent Linux kernel on an
          Intel processor with VT (virtualization technology) extensions.
       </p>
       <p>
          In the near future, you will also be able to use AMD processors with
          AMD-V extensions.
       </p>

       <hr/>

       <p class="q">
          What is Intel VT / AMD-V?
       </p>
       <p>
          <a href="http://www.intel.com/technology/itj/2006/v10i3/1-hardware/6-vt-x-vt-i-solutions.htm">Intel VT</a> 
          and <a href="http://www.amd.com/us-en/Processors/ProductInformation/0,,30_118_8826_14287,00.html">AMD's AMD-V</a> 
          are instruction set extensions that provide
          hardware assistance to virtual machine monitors.  They enable
          running fully isolated virtual machines at native hardware speeds,
          for some workloads.
       </p>

       <hr/>

       <p class="q">
          How can I tell if I have Intel VT or AMD-V?
       </p>
       <p>
          With a recent enough Linux kernel, run the command:
          <pre>grep '^flags.*vmx' /proc/cpuinfo</pre>
          If something shows up, you have VT.  You can also check the processor
          model name (in <code>/proc/cpuinfo</code>) in the vendor's web site.
       </p>

       <hr/>

       <p class="q">
          What user space tools does kvm use?
       </p>
       <p>
          kvm uses a slightly modified <a href="http://www.qemu.com">qemu</a>
          program to instantiate the virtual machine.  Once running, a virtual
          machine is just a regular process.  You can use <code>top(1)</code>,
          <code>kill(1)</code>, <code>taskset(1)</code> and similar tools to
          manage virtual machines.
       </p>
      
       <hr/>

       <p class="q">
          What virtual disk formats can kvm use?
       </p>
       <p>
          kvm inherits a wealth of disk formats support from qemu; it supports
          raw images, the native qemu format (qcow), VMware format, and many
          more.
       </p>

       <hr/>

       <p class="q">
          What is the difference between kvm and Xen?
       </p>
       <p>
          Xen is an external hypervisor; it assumes control of the machine
          and divides resources among guests.  On the other hand, kvm is
          part of Linux and uses the regular Linux scheduler and memory
          management. This means that kvm is much smaller and simpler to use.
       </p>
       <p>
          On the other hand, Xen supports both full virtualization and a
          technique called paravirtualization, which allows better performance
          for modified guests.  kvm does not at present support
          paravirtualization.
       </p>

       <hr/>

       <p class="q">
          What is the difference between kvm and VMWare?
       </p>
       <p>
          VMware is a proprietary product.  kvm is Free Software released
          under the GPL.
       </p>

       <hr/>

       <p class="q">
          What is the difference between kvm and QEMU?
       </p>
       <p>
          Qemu uses emulation; kvm uses processor extensions for
          virtualization.
       </p>

       <hr/>

       <p class="q">
          Do you have a port of kvm for Windows?
       </p>
       <p>
          No.
       </p>

       <hr/>   

       <p class="q">
          What kernel version does it work with?
       </p>
       <p>
          kvm should work with any recent kernel (2.6.16 and above, likely
          even earlier)
       </p>

       <hr/>   

       <p class="q">
          How much memory do I need?
       </p>
       <p>
          You will need enough memory to let the guest run comfortably
          while keeping enough for the host. 1GB is probably a minimum 
          configuration for the host OS.
       </p>

       <hr/>   

       <p class="q">
          What OSs can I run inside kvm VM?
       </p>
       <p>
          We have tested Linux (32/64 bit) and Windows (32 bit).  Others may
          or may not work.
       </p>

       <hr/>   

       <p class="q">
          What happens if I kill -9 a VM process?
       </p>
       <p>
          From the guest's perspective, it is as if you yanked the power cord
          out.  From the host's perspective, the process is killed and all
          resources it uses are reclaimed.
       </p>

     </cms:content>
  </cms:page>

  <cms:footer>
    <p><center>
       kvm development is sponsored by 
       <a href="http://www.qumranet.com">Qumranet</a>.
       </center>
    </p>
  </cms:footer>

</cms:pageset>
